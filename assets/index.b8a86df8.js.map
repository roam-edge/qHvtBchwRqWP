{"version":3,"file":"index.b8a86df8.js","sources":["../../dev/src/views/Login/index.vue"],"sourcesContent":["<script lang=\"ts\" setup>\r\nimport { authUserInfo } from '@/apis';\r\nimport { useAuthStore, useUserStore } from '@/store';\r\nimport type { FormInstance } from 'element-plus';\r\nimport { ElMessage } from 'element-plus';\r\nimport { reactive, ref } from 'vue';\r\nimport { useRoute, useRouter } from 'vue-router';\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst { setToken } = useAuthStore();\r\nconst { setUserName } = useUserStore();\r\nconst ruleFormRef = ref<FormInstance>();\r\n\r\nconst ruleForm = reactive({\r\n    pass: '',\r\n    checkPass: '',\r\n});\r\n\r\nconst validatePass = (rule: any, value: any, callback: any) => {\r\n    if (value === '') {\r\n        callback(new Error('Please input the password'));\r\n    } else {\r\n        if (ruleForm.checkPass !== '') {\r\n            if (!ruleFormRef.value) return;\r\n            ruleFormRef.value.validateField('checkPass', () => null);\r\n        }\r\n        callback();\r\n    }\r\n};\r\nconst validatePass2 = (rule: any, value: any, callback: any) => {\r\n    if (value === '') {\r\n        callback(new Error('Please input the password again'));\r\n    } else if (value !== ruleForm.pass) {\r\n        callback(new Error(\"Two inputs don't match!\"));\r\n    } else {\r\n        callback();\r\n    }\r\n};\r\nconst rules = reactive({\r\n    pass: [{ validator: validatePass, trigger: 'blur' }],\r\n    checkPass: [{ validator: validatePass2, trigger: 'blur' }],\r\n});\r\n\r\nconst submitForm = (formEl: FormInstance | undefined) => {\r\n    if (!formEl) return;\r\n    formEl.validate(async (valid) => {\r\n        if (valid) {\r\n            console.log('submit!');\r\n            setToken(ruleForm.pass);\r\n            const [error, res] = await authUserInfo();\r\n            if (error) {\r\n                return false;\r\n            }\r\n\r\n            setUserName(res.login);\r\n\r\n            ElMessage.success('登录成功');\r\n\r\n            const targetPath = decodeURIComponent(\r\n                route.query.redirect as string,\r\n            );\r\n            if (targetPath.startsWith('http')) {\r\n                // 如果是一个url地址\r\n                window.location.href = targetPath;\r\n            } else if (targetPath.startsWith('/')) {\r\n                // 如果是内部路由地址\r\n                router.push(targetPath);\r\n            } else {\r\n                router.push('/');\r\n            }\r\n        } else {\r\n            console.log('error submit!');\r\n            return false;\r\n        }\r\n    });\r\n};\r\n</script>\r\n<template>\r\n    <el-row :gutter=\"20\" style=\"margin-top: 150px\">\r\n        <el-col :span=\"12\" :offset=\"6\">\r\n            <el-form\r\n                ref=\"ruleFormRef\"\r\n                :model=\"ruleForm\"\r\n                status-icon\r\n                :rules=\"rules\"\r\n                label-width=\"120px\"\r\n                class=\"demo-ruleForm\"\r\n            >\r\n                <el-form-item label=\"Password\" prop=\"pass\">\r\n                    <el-input\r\n                        v-model=\"ruleForm.pass\"\r\n                        prefix-icon=\"el-icon-lock\"\r\n                        type=\"password\"\r\n                        show-password\r\n                        autocomplete=\"on\"\r\n                    />\r\n                </el-form-item>\r\n                <el-form-item label=\"Confirm\" prop=\"checkPass\">\r\n                    <el-input\r\n                        v-model=\"ruleForm.checkPass\"\r\n                        prefix-icon=\"el-icon-lock\"\r\n                        show-password\r\n                        clearable\r\n                        type=\"password\"\r\n                        autocomplete=\"on\"\r\n                    />\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"submitForm(ruleFormRef)\"\r\n                        >login</el-button\r\n                    >\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-col>\r\n    </el-row>\r\n</template>\r\n"],"names":[],"mappings":"sUAOA,KAAA,GAAA,IACA,EAAA,IACA,CAAA,YAAA,IACA,CAAA,eAAA,IACA,EAAA,IAEA,EAAA,EAAA,CAA0B,KAAA,GAChB,UAAA,EACK,CAAA,EAuBf,EAAA,EAAA,CAAuB,KAAA,CAAA,CAAA,UApBvB,CAAA,EAAA,EAAA,IAAA,CACI,GAAA,IAAA,GACI,EAAA,GAAA,OAAA,2BAAA,CAAA,MAA+C,CAE/C,GAAA,EAAA,YAAA,GAAA,CACI,GAAA,CAAA,EAAA,MAAwB,OACxB,EAAA,MAAA,cAAA,YAAA,IAAA,IAAA,CAAuD,CAE3D,GAAS,CACb,EAWmB,QAAA,MAAA,CAAA,EACgC,UAAA,CAAA,CAAA,UAVvD,CAAA,EAAA,EAAA,IAAA,CACI,AAAA,IAAA,GACI,EAAA,GAAA,OAAA,iCAAA,CAAA,EAAqD,AAAA,IAAA,EAAA,KAErD,EAAA,GAAA,OAAA,yBAAA,CAAA,EAEA,GACJ,EAGmD,QAAA,MAAA,CAAA,CACM,CAAA,EAG7D,EAAA,AAAA,GAAA,CACI,AAAA,CAAA,GACA,EAAA,SAAA,KAAA,IAAA,CACI,GAAA,EAAA,CACI,QAAA,IAAA,SAAA,EACA,EAAA,EAAA,IAAA,EACA,KAAA,CAAA,EAAA,GAAA,KAAA,GAAA,EACA,GAAA,EACI,MAAA,GAGJ,EAAA,EAAA,KAAA,EAEA,EAAA,QAAA,0BAAA,EAEA,KAAA,GAAA,mBAAA,EAAA,MAAA,QAAA,EAGA,AAAA,EAAA,WAAA,MAAA,EAEI,OAAA,SAAA,KAAA,EAAuB,AAAA,EAAA,WAAA,GAAA,EAGvB,EAAA,KAAA,CAAA,EAEA,EAAA,KAAA,GAAA,CACJ,KAEA,gBAAA,IAAA,eAAA,EACA,EACJ,CAAA,CACH"}